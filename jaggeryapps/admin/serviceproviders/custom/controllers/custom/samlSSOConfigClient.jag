<%
var log = new Log();
var user = request.getParameter("user");
var action = request.getParameter("clientAction");
handle(action);

function handle(action) {

    try {
        if (action == "getClaimURIs") {
            var ssoClient = require('samlSSOConfigServiceClient.jag');
            var claimURIs = ssoClient.getClaimURIs();
            print(claimURIs);
        } else if (action == "addSPConfigByMetadata") {
            addSPConfigByMetadata();
        } else {
            getsamlClient();
        }
    } catch (e) {
        log.error(e);
    }
}

function getsamlClient() {

    session.put('user', user);
    var ssoClient = require('samlSSOConfigServiceClient.jag');
    var serviceProviders = ssoClient.getServiceProviders().return;
    var claimURIs = ssoClient.getClaimURIs().return;
    var certAliases = ssoClient.getCertAliasOfPrimaryKeyStore().return;
    var signingAlgos = ssoClient.getSigningAlgorithmUris().return;
    var digestAlgos = ssoClient.getDigestAlgorithmURIs().return;
    var signingAlgo = ssoClient.getSigningAlgorithmUriByConfig().return;
    var digestAlgo = ssoClient.getDigestAlgorithmURIByConfig().return;
    var samlClient = {};
    samlClient['serviceProviders'] = serviceProviders;
    samlClient['claimURIs'] = claimURIs;
    samlClient['certAliases'] = certAliases;
    samlClient['signingAlgos'] = signingAlgos;
    samlClient['signingAlgo'] = signingAlgo;
    samlClient['digestAlgos'] = digestAlgos;
    samlClient['digestAlgo'] = digestAlgo;
    samlClient['storeUrl'] = application.get(MGT_TRANSPORT) + "://" + application.get(MGT_HOST_NAME) + ":" +application.get(HTTPS_PORT)
            + "/identity?spEntityID=";
    print(samlClient);
}

function addSPConfigByMetadata() {
    var spName = request.getParameter('spName');
    var file = request.getFile("file")
    var spType = request.getParameter('spType');
    file.open("r");
    var message = "";
    message = file.readAll();
    message = new java.lang.String(message);
    var encoded = org.apache.commons.codec.binary.Base64.encodeBase64(message.getBytes("UTF-8"));
    encoded = new java.lang.String(encoded);
    var cloudSamlClient = require('cloudSAMLClient.jag');
    var payload = '<xsd:addSPConfigByMetadata xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsd="http://org.apache.axis2/xsd">' +
            '<xsd:fileContent>' + encoded + '</xsd:fileContent>' +
            '<xsd:serviceProviderName>' + spName + '</xsd:serviceProviderName>' +
            '<xsd:spType>' + spType + '</xsd:spType>' +
            '</xsd:addSPConfigByMetadata>';
    cloudSamlClient.addSPConfigByMetadata(payload);
    file.close();
}

%>
